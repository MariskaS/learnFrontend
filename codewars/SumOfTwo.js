/**
 * Вернуть 2 числа, сумма которых равна переданному
 * вторым параметром числу.
 * O(n)
 */
const sumOfTwo = (arr, elem) => {
    const numObj = {};
    //  сохраним в объект пары {число из массива: его индекс}
    // { '2': 0, '7': 1, '11': 2, '15': 3 }
    for (let i = 0; i < arr.length; i++) {
        numObj[arr[i]] = i;
    }
    console.log('numObj: ', numObj)
    //  { '2': 0, '7': 1, '11': 2, '15': 3 }
    for (let i = 0; i < arr.length; i++) {
        // 9 - 2 = 7
        const diff = elem - arr[i];
        // если число получившееся в результате(искомая
        // сумма - текущее значение) есть в нашем объекте.
        // numObj[diff] !== i, искомая сумма может оказаться
        // элементом массива + этот же элемент -
        // тогда в массив запушится индекс одного
        // и того же числа - дважды, поэтому нужна
        // проверка numObj[diff] !== i
        // такая ошибка может случиться в
        // примере [2, 7, 11, 15], 14 - нам бы вывелся
        // дважды индекс 7ки => [1,1].
        if (numObj[diff] && numObj[diff] !== i) {
            // вернем массив с текущим индексом и
            // индексом найденного числа.
            return [i, numObj[diff]]
        }
    }
    // в случае если arr не содержит 2х чисел
    // которые в сумме дают elem => [].
    return []
}
console.log(sumOfTwo([2, 7, 11, 15], 9));
